security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|media|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    
    role_hierarchy:
    
        ROLE_EDITOR: 
            - ROLE_ADMIN_CATEGORY_LIST
            - ROLE_ADMIN_CATEGORY_SHOW
            - ROLE_ADMIN_ARTICLE_LIST
            - ROLE_ADMIN_ARTICLE_CREATE
            - ROLE_ADMIN_ARTICLE_SECTION
            - ROLE_ADMIN_PORTAL_LIST
            - ROLE_ADMIN_PORTAL_SHOW
            - ROLE_ADMIN_IMAGE_LIST
            - ROLE_ADMIN_TIMELINE_LIST
            - ROLE_ADMIN_IMAGE_SHOW
            - ROLE_ADMIN_IMAGE_EDIT
            - ROLE_ADMIN_IMAGE_CREATE
            - ROLE_ADMIN_PERSON_LIST
            - ROLE_ADMIN_PERSON_SHOW
        ROLE_ADMIN: 
            - ROLE_ADMIN_ARTICLE_ALL
            - ROLE_ADMIN_CATEGORY_ALL
            - ROLE_ADMIN_PORTAL_ALL
            - ROLE_ADMIN_IMAGE_ALL
            - ROLE_ADMIN_TIMELINE_ALL
            - ROLE_ADMIN_USER_ALL
            - ROLE_ADMIN_PAGE_ALL
            - ROLE_ADMIN_COMMENT_ALL
            - ROLE_ADMIN_PERSON_ALL
        ROLE_SUPER_ADMIN:
            - ROLE_ADMIN_ARTICLE_ALL
            - ROLE_ADMIN_CATEGORY_ALL
            - ROLE_ADMIN_PORTAL_ALL
            - ROLE_ADMIN_IMAGE_ALL
            - ROLE_ADMIN_TIMELINE_ALL
            - ROLE_ADMIN_USER_ALL
            - ROLE_ADMIN_BACKUP_ALL
            - ROLE_ALLOWED_TO_SWITCH
            - ROLE_ADMIN

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/register, roles: PUBLIC_ACCESS }
        - { path: ^/contact, roles: PUBLIC_ACCESS }
        - { path: ^/faq, roles: PUBLIC_ACCESS }
        - { path: ^/articles, roles: ROLE_USER }
        - { path: ^/category, roles: ROLE_USER }
        - { path: ^/portals, roles: ROLE_USER }
        - { path: ^/images, roles: ROLE_USER }
        - { path: ^/persons, roles: ROLE_USER }
        - { path: ^/timelines, roles: ROLE_USER }
        - { path: ^/print, roles: ROLE_USER }
        - { path: ^/admin, roles: [ROLE_ADMIN, ROLE_EDITOR, ROLE_SUPER_ADMIN] }
        - { path: ^/admin/app/article, roles: [ROLE_ADMIN, ROLE_EDITOR, ROLE_SUPER_ADMIN] }
        - { path: ^/admin/app/category, roles: [ROLE_ADMIN, ROLE_EDITOR, ROLE_SUPER_ADMIN] }
        - { path: ^/admin/app/portal, roles: [ROLE_ADMIN, ROLE_EDITOR, ROLE_SUPER_ADMIN] }
        - { path: ^/admin/app/image, roles: [ROLE_ADMIN, ROLE_EDITOR, ROLE_SUPER_ADMIN] }
        - { path: ^/admin/app/timeline, roles: [ROLE_ADMIN, ROLE_EDITOR, ROLE_SUPER_ADMIN] }
        - { path: ^/admin/app/person, roles: [ROLE_ADMIN, ROLE_EDITOR, ROLE_SUPER_ADMIN] }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/comment, roles: ROLE_USER }
        - { path: ^/draft, roles: [ROLE_EDITOR, ROLE_ADMIN] }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
